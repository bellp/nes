(f3 (f2 (f1 x)))
(doc get)
(byte 0xAA)
(doc read)
(doc peek)
(byte 170)
(mod 0xFF 0xFF)
(mod 260 255)
quit
(take 5 (range 10))
(type (take 5 (range 10)))
(doc assoc-in)
(byte 200)
(take 5 (range 10))
(type (range))
(range)
(type (range))
(type (range 5))
(range \a)
(->> (range 10))
(->> (range 10) #(* 2 %))
(range 100)
(range 1000)
(range 100)
(->> (range 10) #(* 2 %))
(->> (range 10) (map #(* 2 %)))
quit
(defn square
"Returns x * x"
[x]
(* x x))
(square 5)
(. Math sqrt 25)
(type (. Math sqrt 25))
Math.sqrt(25)
(. Math sqrt 25)
(Math. sqrt 25)
(-> sqrt Math .)
(. Math sqrt 25)
(new_cpu)
(nes.core/new-cpu)
(nes.bran
(nes.branching/jmp 42)
